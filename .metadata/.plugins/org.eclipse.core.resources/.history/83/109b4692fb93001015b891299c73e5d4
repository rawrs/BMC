package bmc.main.gameobjects;

import java.util.Random;

import android.content.res.Resources;
import android.graphics.Bitmap;
import android.graphics.BitmapFactory;
import android.graphics.Canvas;
import bmc.game.Panel;
import bmc.game.R;

public class Sprite {
	private int mX;
    private int mY;
    private int mSpeed;
    private int mIndex;
    private int numIndexes;
 
    private Bitmap mBitmap;
    
    public Sprite(Resources res, int height, int width,int speed,int X,int Y)
    	
    {
    	this(res,height,width,speed);
    	mX = X;
    	mY = Y;
    }
 
    public Sprite(Resources res, int height, int width,int speed) 
    {
    	Random rand = new Random();
        mBitmap = BitmapFactory.decodeResource(res, R.drawable.icon);
        mIndex = 0;
        numIndexes = (int) Math.floor(mBitmap.getWidth()/width);
        mSpeed = speed;
    }
 
    public void animate(long elapsedTime) {
        //mX += mSpeedX * (elapsedTime / 20f);
        //mY += mSpeedY * (elapsedTime / 20f);
        checkBorders();
    }
    private void checkBorders() {
        /*if (mX <= 0) {
            mSpeedX = -mSpeedX;
            mX = 0;
        } else if (mX + mBitmap.getWidth() >= Panel.mWidth) {
            mSpeedX = -mSpeedX;
            mX = (int) (Panel.mWidth - mBitmap.getWidth());
        }
        if (mY <= 0) {
            mY = 0;
            mSpeedY = -mSpeedY;
        }
        if (mY + mBitmap.getHeight() >= Panel.mHeight) {
            mSpeedY = -mSpeedY;
            mY = (int) (Panel.mHeight - mBitmap.getHeight());
        }*/
    }
    public void doDraw(Canvas canvas) {
        canvas.drawBitmap(mBitmap, mX, mY, null);
    }
    
}
